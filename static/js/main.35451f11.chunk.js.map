{"version":3,"sources":["App.js","index.js"],"names":["Button","props","className","onClick","handleClick","label","InputTextArea","id","rows","cols","defaultValue","Team","name","players","join","App","useState","fair","rankings","teamRed","teamWhite","data","setData","readData","document","getElementById","value","split","filter","el","title","type","defaultChecked","htmlFor","sort","a","b","aRanking","bRanking","i","length","ranking","console","log","sortData","checked","push","newData","ReactDOM","render","StrictMode"],"mappings":"+OAiHMA,G,MAAS,SAACC,GACd,OACE,4BAAQC,UAAU,qBAAqBC,QAASF,EAAMG,aACnDH,EAAMI,SAKPC,EAAgB,SAACL,GACrB,OACE,yBAAKM,GAAIN,EAAMM,IACb,6BAAMN,EAAMI,OACZ,8BACEE,GAAE,UAAKN,EAAMM,GAAX,UACFL,UAAU,cACVM,KAAK,KACLC,KAAK,KACLC,aAAcT,EAAMS,iBAKtBC,EAAO,SAACV,GACZ,OACE,yBAAKM,GAAG,cACN,yBAAKL,UAAU,aAAf,QAAiCD,EAAMW,MACvC,yBAAKV,UAAU,gBAAgBD,EAAMY,QAAQC,KAAK,SAKzCC,EA1IH,SAACd,GAAW,IAAD,EACGe,mBAAS,CAC/BC,MAAM,EACNJ,QANqB,qCAOrBK,SANsB,iDAOtBC,QAAS,GACTC,UAAW,KANQ,mBACdC,EADc,KACRC,EADQ,KASfC,EAAW,SAAChB,GAChB,OAAOiB,SAASC,eAAelB,GAAImB,MAChCC,MAAM,MACNC,QACC,SAAUC,GAAM,OAAOA,MA0D7B,OACE,yBAAK3B,UAAU,OACb,4BAAQA,UAAU,cAChB,uCAEF,yBAAKA,UAAU,eACb,kBAAC,EAAD,CAAMK,GAAG,OAAOK,KAAK,MAAMC,QAASQ,EAAKF,UACzC,kBAAC,EAAD,CAAMZ,GAAG,SAASK,KAAK,QAAQC,QAASQ,EAAKD,YAC7C,yBAAKlB,UAAU,OACb,yBAAKK,GAAG,iBAAiBL,UAAU,UACjC,kBAAC,EAAD,CACEK,GAAG,UACHF,MAAM,UACNK,aAAcW,EAAKR,WAEvB,yBAAKN,GAAG,kBAAkBL,UAAU,UAClC,kBAAC,EAAD,CACEK,GAAG,WACHF,MAAM,WACNK,aAAcW,EAAKH,aAGzB,yBAAKhB,UAAU,OACb,0BAAM4B,MAAM,6BACV,2BAAOC,KAAK,WAAWxB,GAAG,OAAOyB,eAAgBX,EAAKJ,OACtD,2BAAOgB,QAAQ,QAAf,SAEF,yBAAK1B,GAAG,gBAAgBL,UAAU,mBAChC,kBAAC,EAAD,CAAQE,YA9DC,WACjB,IAAMS,EAAUU,EAAS,iBAErBJ,EAAU,GACVC,EAAY,IAxBD,SAACP,EAASK,GACzBL,EAAQqB,MAAK,SAAUC,EAAGC,GAGxB,IAFA,IAAIC,EAAW,GACXC,EAAW,GACNC,EAAI,EAAGA,EAAIrB,EAASsB,OAAQD,IAAK,CACxC,IAAIE,EAAUvB,EAASqB,GAAGZ,MAAM,KACT,IAAnBc,EAAQD,SACNC,EAAQ,KAAON,IACjBE,EAAWI,EAAQ,IAEjBA,EAAQ,KAAOL,IACjBE,EAAWG,EAAQ,KAIzB,OAAOH,EAAWD,KAEpBK,QAAQC,IAAI,mBAAoB9B,GAShC+B,CAAS/B,EAJQU,EAAS,mBAM1B,IAAMN,EAAOO,SAASC,eAAe,QAAQoB,QAC7C,GAAI5B,GAAQJ,EAAQ2B,OAAS,EAAG,OAEH,CAAC3B,EAAQ,GAAIA,EAAQ,IAA/CA,EAAQ,GAFqB,KAEjBA,EAAQ,GAFS,KAKhC,IAAK,IAAI0B,EAAI,EAAGA,EAAI1B,EAAQ2B,OAAQD,GAAQ,EAC1CpB,EAAQ2B,KAAKjC,EAAQ0B,IAGvB,IAAK,IAAIA,EAAI,EAAGA,EAAI1B,EAAQ2B,OAAQD,GAAQ,EAC1CnB,EAAU0B,KAAKjC,EAAQ0B,IAGzBpB,EAAQe,OACRd,EAAUc,OAEV,IAAMa,EAAO,2BACR1B,GADQ,IAEXJ,KAAMA,EACNE,QAASA,EACTC,UAAWA,IAEbE,EAAQyB,IA+BiC1C,MAAM,aCpGnD2C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF1B,SAASC,eAAe,W","file":"static/js/main.35451f11.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst playersDefaultValue = `player1\\nplayer2\\nplayer3\\nplayer4`\nconst rankingsDefaultValue = `player1:80\\nplayer2:60\\nplayer3:40\\nplayer4:20`\n\nconst App = (props) => {\n  const [data, setData] = useState({\n    fair: true,\n    players: playersDefaultValue,\n    rankings: rankingsDefaultValue,\n    teamRed: [],\n    teamWhite: []\n  })\n\n  const readData = (id) => {\n    return document.getElementById(id).value\n      .split('\\n')\n      .filter(\n        function (el) { return el; } // remove falsy values\n      )\n  }\n\n  const sortData = (players, rankings) => {\n    players.sort(function (a, b) {\n      let aRanking = 50\n      let bRanking = 50\n      for (let i = 0; i < rankings.length; i++) {\n        let ranking = rankings[i].split(':')\n        if (ranking.length === 2) {\n          if (ranking[0] === a) {\n            aRanking = ranking[1]\n          }\n          if (ranking[0] === b) {\n            bRanking = ranking[1]\n          }\n        }\n      }\n      return bRanking - aRanking\n    });\n    console.log(\"players (sorted)\", players)\n  }\n\n  const updateData = () => {\n    const players = readData('players-input')\n    const rankings = readData('rankings-input')\n    let teamRed = []\n    let teamWhite = []\n\n    sortData(players, rankings)\n\n    const fair = document.getElementById('fair').checked\n    if (fair && players.length > 1) {\n      // swap position of top two players before making team rosters to equalize rosters a bit\n      [players[0], players[1]] = [players[1], players[0]]\n    }\n\n    for (let i = 0; i < players.length; i = i + 2) {\n      teamRed.push(players[i])\n    }\n\n    for (let i = 1; i < players.length; i = i + 2) {\n      teamWhite.push(players[i])\n    }\n\n    teamRed.sort()\n    teamWhite.sort()\n\n    const newData = {\n      ...data,\n      fair: fair,\n      teamRed: teamRed,\n      teamWhite: teamWhite\n    }\n    setData(newData)\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>Rosters</p>\n      </header>\n      <div className=\"App-content\">\n        <Team id=\"reds\" name=\"Red\" players={data.teamRed} />\n        <Team id=\"whites\" name=\"White\" players={data.teamWhite} />\n        <div className=\"row\">\n          <div id=\"players-column\" className=\"column\">\n            <InputTextArea\n              id=\"players\"\n              label=\"Players\"\n              defaultValue={data.players} />\n          </div>\n          <div id=\"rankings-column\" className=\"column\">\n            <InputTextArea\n              id=\"rankings\"\n              label=\"Rankings\"\n              defaultValue={data.rankings} />\n          </div>\n        </div>\n        <div className=\"row\">\n          <span title=\"Run with 'fair' algorithm\">\n            <input type=\"checkbox\" id=\"fair\" defaultChecked={data.fair} />\n            <label htmlFor=\"fair\">Fair</label>\n          </span>\n          <div id=\"action-column\" className=\"column flex-end\">\n            <Button handleClick={updateData} label='Run' />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst Button = (props) => {\n  return (\n    <button className=\"button float-right\" onClick={props.handleClick}>\n      {props.label}\n    </button>\n  )\n}\n\nconst InputTextArea = (props) => {\n  return (\n    <div id={props.id}>\n      <div>{props.label}</div>\n      <textarea\n        id={`${props.id}-input`}\n        className=\"resize-none\"\n        rows=\"20\"\n        cols=\"16\"\n        defaultValue={props.defaultValue} />\n    </div>\n  )\n}\n\nconst Team = (props) => {\n  return (\n    <div id=\"{props.id}\">\n      <div className=\"team-name\">Team {props.name}</div>\n      <div className=\"players-list\">{props.players.join(', ')}</div>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}